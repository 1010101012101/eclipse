<!-- This is an example for the doc on the session test framework -->
<!-- 
	Option sets are sets of command line options for running Eclipse.
	Named option sets must be explicitly selected to be used.
	Unnamed ones are selected if the named option sets they require
	are selected.
	Option sets can extend other named option sets, inheriting all options from the ancestor.
	A setup file can specify default option sets. Users can override the set of
	default option sets by using the setup.override.* options.
	Setup files are specified by using the setup.files property.
-->

<setup>

	<!-- Support a single J9 version, so no need for multiple option sets -->
	<optionSet id="j9" name="J9">
		<!-- The VM location specified using the Eclipse -vm argument (needs to be overriden). -->
		<eclipseArg option="vm" value="x:\java\j9sc20040917\jre\bin\java"/>	
		<!-- Enable the J9 VM by using the -Xj9 VM argument. -->		
		<vmArg option="Xj9"/>
	</optionSet>	     

	<!-- We run against a multitude of Sun JREs. The "sun" option set is just a common ancestor 
	for all Sun JREs we may want to run against. -->
	<optionSet id="sun" name="Sun JRE"/>
	<!-- The Sun 1.3 JRE is a type of Sun JRE -->
	<optionSet id="sun_1.3" name="Sun JRE 1.3.*" base="sun">
		<!-- The VM location specified using the Eclipse -vm argument (needs to be overriden). -->	
		<eclipseArg option="vm" value="x:\java\sun jdk 1.3.1_08\jre\bin\java"/>
	</optionSet>	
	<!-- The Sun 1.4 JRE is a type of Sun JRE -->	
	<optionSet id="sun_1.4" name="Sun JRE 1.4.*" base="sun">	
		<!-- The VM location specified using the Eclipse -vm argument (needs to be overriden). -->	
		<eclipseArg option="vm" value="x:\java\sun jdk 1.4.2_03\jre\bin\java"/>
	</optionSet>	
	<!-- The Sun 1.5 JRE is a type of Sun JRE -->	
	<optionSet id="sun_1.5" name="Sun JRE 1.5.*" base="sun">
		<!-- The VM location specified using the Eclipse -vm argument (needs to be overriden). -->	
		<eclipseArg option="vm" value="x:\java\sun jdk 1.5.0\jre\bin\java"/>
	</optionSet>	
	
	<!-- Memory related options. They usually have the same form in all common VMs,
	so there is no need to worry about conflicts between option sets. -->
	<optionSet id="big_memory" name="Big Memory">
		<vmArg option="Xmx512m"/>
	</optionSet>	
	<optionSet id="medium_memory" name="Medium Memory">
		<vmArg option="Xmx256m"/>
	</optionSet>	
	<optionSet id="low_memory" name="Low Memory">
		<vmArg option="Xmx32m"/>
	</optionSet>	
	
	<!-- The "No JIT" option set family. The syntax for disabling JIT is VM-specifc so there is 
	a need to provide VM-specific option sets for this (see below).
	<optionSet id="nojit" name="No JIT"/>
	
	<!-- This option set disables JIT on J9 VMs. It is a non-identified option set (lacks the "id" attribute). 
	It is automatically selected when all option sets it requires (j9,nojit) are specified by the user.
	<optionSet name="No JIT on J9" with="j9,nojit">
		<vmArg option="Xint"/>
	</optionSet>	
	
	<!-- This option set disables JIT on Sun VMs. It is an unnamed option set. It is automatically 
	selected when all option sets it requires (sun,nojit) are specified by the user. Note that
	actually users should specify "sun_1.3,nojit", "sun_1.4,nojit" or "sun_1.5,nojit". Since 
	they all have "sun" as their base option set, this option set will be appropriately selected.
	<optionSet name="No JIT on Sun" with="sun,nojit">	
		<systemProperty key="java.compiler" value="none"/>	
	</optionSet>

	<!-- Enables remote debugging. Has "nojit" as base (JIT has to be disabled when debugging), 
	so the appropriate syntax for disabling JIT will be picked depending on which VM is chosen.
	The options specified here seem to be supported through all VMs we use, so no need for VM-specific
	option sets.
	<optionSet id="remote_debug" name="Remote Debugging" timeout="0" base="nojit">
		<vmArg option="Xdebug"/>
		<vmArg option="Xnoagent"/>
		<vmArg option="Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000"/>
	</optionSet>

	<!-- The Eclipse 3.0 option set family. -->
	<optionSet id="eclipse_3.0"	name="Eclipse 3.0.x"/>
	<!-- The Eclipse 3.0.0 option set, based on the "eclipse_3.0" family. -->	
	<optionSet id="eclipse_3.0.0" name="Eclipse 3.0.0" base="eclipse_3.0">
		<!-- The Eclipse location specified using the Eclipse -install argument (needs to be overriden). -->
		<eclipseArg option="install" value="x:\eclipse\3.0.x\3.0\eclipse"/>
	</optionSet>
	<!-- The Eclipse 3.0.1 option set, based on the "eclipse_3.0" family. -->		
	<optionSet id="eclipse_3.0.1" name="Eclipse 3.0.1" base="eclipse_3.0">	
		<eclipseArg option="install" value="x:\eclipse\3.0.x\3.0.1\eclipse"/>
	</optionSet>	

	<!-- The Eclipse 3.1 option set family. -->	
	<optionSet id="eclipse_3.1" name="Eclipse 3.1"/>	
	<!-- The Eclipse 3.1 M1 option set, based on the "eclipse_3.1" family. -->
	<optionSet id="eclipse_3.1_M1" name="Eclipse 3.1 M1" base="eclipse_3.1">
		<eclipseArg option="install" value="x:\eclipse\3.1.x\m1\eclipse"/>
	</optionSet>	     	
		
	<!-- This option sets specifies the -data Eclipse command line option to be "workspace".
	It is useful to avoid the "Workspace Chooser" to come up during automated tests.
	<optionSet id="basic_instance" name="Basic Instance">
		<eclipseArg option="data" value="workspace"/>
	</optionSet>	     
	
	<!-- This option set enables the use of the Cloudscape database.
	<optionSet id="performance" name="Performance">	
		<!-- The database location needs to be overriden. -->
		<systemProperty key="eclipse.perf.dbloc" value="x:/temp/cloudscape"/>
	</optionSet>
</setup>